openapi: 3.0.0
x-stoplight:
  id: 1hvsobgpn2hzu
info:
  title: spec
  version: '2.5'
  contact:
    name: Support
    url: 'https://openweathermap.org/api'
    email: some_email@gmail.com
  license:
    url: 'https://creativecommons.org/licenses/by-sa/4.0/'
    name: Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
  description: 'Get the current weather, daily forecast for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and this day in history charts are available for your reference. Interactive maps show precipitation, clouds, pressure, wind around your location stations. Data is available in JSON, XML, or HTML format.'
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: openWeatherApi
paths:
  /user:
    post:
      summary: Create New User
      operationId: post-user
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      description: Create a new user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
  '/users/{userId}':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
        description: Id of an existing user.
    get:
      summary: Get User Info by User ID
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: User Not Found
      operationId: get-users-userId
      description: Retrieve the information of the user with the matching user ID.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: User Not Found
        '409':
          description: Email Already Taken
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
  /weather:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherResponse'
      operationId: get-weather
      parameters:
        - schema:
            type: string
          in: query
          name: zip
          description: 'Search by zip code. Example: 95050,us. Please note that if the country is not specified, the search uses USA as a default.'
        - schema:
            type: string
          in: query
          name: units
          description: 'When you do not use the units parameter, the format is standard by default.'
components:
  schemas:
    User:
      title: User
      type: object
      x-examples:
        Alice Smith:
          id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
      description: User
    WeatherResponse:
      type: object
      properties:
        coord:
          type: object
          properties:
            lon:
              type: number
            lat:
              type: number
        weather:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              main:
                type: string
              description:
                type: string
              icon:
                type: string
        base:
          type: string
        main:
          type: object
          properties:
            temp:
              type: number
            feels_like:
              type: number
            temp_min:
              type: integer
            temp_max:
              type: integer
            pressure:
              type: integer
            humidity:
              type: integer
        visibility:
          type: integer
        wind:
          type: object
          properties:
            speed:
              type: number
            deg:
              type: integer
        clouds:
          type: object
          properties:
            all:
              type: integer
        dt:
          type: integer
        sys:
          type: object
          properties:
            type:
              type: integer
            id:
              type: integer
            country:
              type: string
            sunrise:
              type: integer
            sunset:
              type: integer
        timezone:
          type: integer
        id:
          type: integer
        name:
          type: string
        cod:
          type: integer
      x-examples:
        Example 1:
          coord:
            lon: -121.95
            lat: 37.35
          weather:
            - id: 803
              main: Clouds
              description: broken clouds
              icon: 04n
          base: stations
          main:
            temp: 45.25
            feels_like: 41.16
            temp_min: 41
            temp_max: 50
            pressure: 1026
            humidity: 75
          visibility: 16093
          wind:
            speed: 2.57
            deg: 36
          clouds:
            all: 75
          dt: 1579415808
          sys:
            type: 1
            id: 5845
            country: US
            sunrise: 1579360793
            sunset: 1579396557
          timezone: -28800
          id: 0
          name: Santa Clara
          cod: 200
      description: ''
      title: ''
  securitySchemes:
    app_id:
      name: appId
      type: apiKey
      in: query
security:
  - app_id: []
